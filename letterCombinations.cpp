/*
17. 电话号码的字母组合
给定一个仅包含数字 2-9 的字符串，返回所有它能表示的字母组合。
给出数字到字母的映射如下（与电话按键相同）。注意 1 不对应任何字母。
示例:
输入："23"
输出：["ad", "ae", "af", "bd", "be", "bf", "cd", "ce", "cf"].
说明:
尽管上面的答案是按字典序排列的，但是你可以任意选择答案输出的顺序。

来源：LeetCode
链接：https://leetcode-cn.com/problems/letter-combinations-of-a-phone-number/
*/
string strMap[] = {"", "", "abc", "def", "ghi", "jkl", "mno", "pqrs", "tuv", "wxyz"};
class Solution {
public:
    void dfs(string digits, vector<string>& res, int curId, string curStr)
    {
        //边界条件
        if(curId == digits.size())
        {
            if(!curStr.empty())
                res.push_back(curStr);
            return;
        }
        //从当前位置的数字映射中选择一个字符，进行拼接
        string curMap = strMap[digits[curId] - '0'];
        for(char ch : curMap)
            dfs(digits, res, curId + 1, curStr + ch);
    }
    vector<string> letterCombinations(string digits) {
        vector<string> res;
        dfs(digits, res, 0, "");
        
        return res;
    }
};